#!/usr/bin/env node

import mongoose from "mongoose";
import dotenv from "dotenv";
import CondicoesIdeais from "./models/Condicoes_ideais.js";
import Cativeiros from "./models/Cativeiros.js";
import TiposCamarao from "./models/Camaroes.js";

dotenv.config();

const mongoUrl = process.env.MONGO_URL || "mongodb://localhost:27017/camarize";

async function fixCondicoesIdeais() {
  try {
    await mongoose.connect(mongoUrl);
    console.log("‚úÖ Conectado ao MongoDB");

    console.log("\nüîß Verificando e corrigindo condi√ß√µes ideais incorretas...");
    
    // Busca todas as condi√ß√µes ideais
    const condicoes = await CondicoesIdeais.find();
    console.log(`üìä Total de condi√ß√µes ideais encontradas: ${condicoes.length}`);
    
    let corrigidas = 0;
    
    for (const condicao of condicoes) {
      let precisaCorrigir = false;
      const valoresCorrigidos = {};
      
      // Verifica temperatura
      if (condicao.temp_ideal < 10 || condicao.temp_ideal > 40) {
        console.log(`‚ö†Ô∏è  Temperatura incorreta: ${condicao.temp_ideal}¬∞C -> corrigindo para 26¬∞C`);
        valoresCorrigidos.temp_ideal = 26;
        precisaCorrigir = true;
      }
      
      // Verifica pH
      if (condicao.ph_ideal < 5 || condicao.ph_ideal > 10) {
        console.log(`‚ö†Ô∏è  pH incorreto: ${condicao.ph_ideal} -> corrigindo para 7.5`);
        valoresCorrigidos.ph_ideal = 7.5;
        precisaCorrigir = true;
      }
      
      // Verifica am√¥nia
      if (condicao.amonia_ideal < 0.01 || condicao.amonia_ideal > 1) {
        console.log(`‚ö†Ô∏è  Am√¥nia incorreta: ${condicao.amonia_ideal}mg/L -> corrigindo para 0.05mg/L`);
        valoresCorrigidos.amonia_ideal = 0.05;
        precisaCorrigir = true;
      }
      
      if (precisaCorrigir) {
        await CondicoesIdeais.findByIdAndUpdate(condicao._id, valoresCorrigidos);
        corrigidas++;
        console.log(`‚úÖ Condi√ß√£o ${condicao._id} corrigida`);
      }
    }
    
    console.log(`\nüéâ Corre√ß√£o conclu√≠da! ${corrigidas} condi√ß√µes ideais foram corrigidas.`);
    
    // Mostra as condi√ß√µes ap√≥s a corre√ß√£o
    console.log("\nüìä Condi√ß√µes ideais ap√≥s corre√ß√£o:");
    const condicoesCorrigidas = await CondicoesIdeais.find().populate('id_tipo_camarao');
    
    condicoesCorrigidas.forEach((condicao, index) => {
      console.log(`\n${index + 1}. Condi√ß√£o Ideal:`);
      console.log(`   Tipo de Camar√£o: ${condicao.id_tipo_camarao?.nome || 'N/A'}`);
      console.log(`   Temperatura Ideal: ${condicao.temp_ideal}¬∞C`);
      console.log(`   pH Ideal: ${condicao.ph_ideal}`);
      console.log(`   Am√¥nia Ideal: ${condicao.amonia_ideal}mg/L`);
    });

  } catch (error) {
    console.error("‚ùå Erro:", error);
  } finally {
    await mongoose.disconnect();
    console.log("\nüîå Desconectado do MongoDB");
  }
}

fixCondicoesIdeais(); 